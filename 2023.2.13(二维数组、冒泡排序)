//二维数组-通过下标来访问
//int main()
//{
//	int arr[3][4] = { {1,2,3} ,{4,5,6,7} };
//	int i = 0;
//	for (i = 0; i < 3; i++)
//	{
//		int j = 0;
//		for (j = 0; j < 4; j++)
//		{
//			printf("&arr[%d][%d] = %p ",i,j, &arr[i][j]);
//			printf("\n");
//		}
//	}
//	return 0;
//}


//函数-冒泡排序-原数组可以是乱序
void bubble_sort(int arr[], int sz)
{
	int i = 0;
	for (i = 0; i < sz - 1; i++)
	{
		int flag = 1;
		int j = 0;
		for (j = 0; j < sz - 1 - i; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				int tmp = 0;
				tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
				flag = 0;
			}

		}
		if (flag == 1)
		{
			break;
		}
	}
}

int main()
{
	int arr[] = { 1,5,4,7,9,2,3,6,8,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	bubble_sort(arr,sz);
	int i = 0;
	for( i = 0; i < sz; i++)
	{
		printf("%d ", i);
	}
	return 0;
}
