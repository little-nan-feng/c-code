#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<math.h>

//函数
// 形参和实参
// 传值调用-函数的形参和实参占用了不同的内存块，对形参的内容的操作不会影响到实参的内容
// 传址调用-把函数外部变量的地址传给函数参数-将函数外部的参数和函数内部的参数真正建立起联系，函数内部可以直接操作函数外部的变量

//交换两个数的位置
//void exchange(int* pa, int* pb)
//{
//	int tmp = 0;
//	tmp = *pa;
//	*pa = *pb;
//	*pb = tmp;
//}
////传址调用-将a,b两个数的地址传给pa,pb，然后对该地址指向的空间的内容进行操作
//int main()
//{
//	int a = 0, b = 0;
//	printf("请输入两个数:\n");
//	scanf_s("%d %d", &a, &b);
//	exchange(&a, &b);
//	printf("a=%d,b=%d\n", a, b);
//	return 0;
//}

// 判断是否是素数-函数
// 是素数返回 1 ，不是素数返回 0
//int is_prime(int n)
//{
//	for (int a = 2; a <= sqrt(n); a++)
//	{
//		if (n % a == 0)
//		{
//			return 0;
//		}
//	}
//	return 1;
//}
//int main()
//{
//	int i = 0;
//	for (i = 100; i <= 200; i++)
//	{
//		//判断 i 是否是素数
//		if (is_prime(i) == 1)
//		{
//			printf("%d ", i);
//		}
//	}
//	return 0;
//}


//判断是否是闰年-函数
//int is_leap_year(int y)
//{
//	if ((y % 4 == 0 && y % 100 != 0) || (y % 400 == 0))
//		return 1;
//	else
//		return 0;
//}
//int main()
//{
//	int i = 0;
//	printf("input a year:>\n");
//	scanf("%d", &i);
//	if (is_leap_year(i) == 1)
//	printf("yes\n");
//	else
//		printf("no\n");
//	return 0;
//}

//二分查找-函数
					//arr[]在这里本质上是一个指针
//int binary_search(int arr[], int i,int sz)
//{
//	int mid = 0;
//	int left = 0;
//	int right = sz - 1;
//	while (left <= right)
//	{
//		mid = (left + right) / 2;
//		if (i < arr[mid])
//		{
//			right = mid - 1;
//		}
//		else if (i > arr[mid])
//		{
//			left = mid + 1;
//		}
//		else
//			return mid;
//	}
//	return 0;
//}
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9 };
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	int i = 0;
//	printf("请输入一个数字:>");
//	scanf("%d", &i);
//	int ret = binary_search(arr, i,sz);
//	if (ret == 0)
//	{
//		printf("找不到指定的数字\n");
//	}
//	else
//	{
//		printf("找到了，下标为:>%d\n", ret);
//	}
//	return 0;
//}

//每调用一次，num + 1
//Add(int* p)
//{
//	(*p)++;
//}
//int main()
//{
//	int num = 0;
//	Add(&num);
//	return 0;
//}

//函数如果不在同一个源文件，则需要在使用前先声明；
//一般把函数的定义放到另一个源文件中，然后将声明语句放到自定义头文件中，在使用时只需要引用一下头文件即可
//使用库函数，使用<>;使用自定义的头文件，使用"";
